spring.application.name=rag

# H2 데이터베이스 설정
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

# OpenAI ChatModel 설정
langchain4j.open-ai.chat-model.api-key=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
langchain4j.open-ai.chat-model.model-name=gpt-4o
langchain4j.open-ai.chat-model.log-requests=true
langchain4j.open-ai.chat-model.log-responses=true

# OpenAI StreamingChatModel 설정 (스트리밍용)
langchain4j.open-ai.streaming-chat-model.api-key=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
langchain4j.open-ai.streaming-chat-model.model-name=gpt-4o
langchain4j.open-ai.streaming-chat-model.log-requests=true
langchain4j.open-ai.streaming-chat-model.log-responses=true
